#BlueJ class context
comment0.params=
comment0.target=Person()
comment1.params=n\ a\ s
comment1.target=Person(java.lang.String,\ int,\ double)
comment10.params=
comment10.target=boolean\ getPropertyChangeFired()
comment11.params=
comment11.target=java.util.List\ getNewardFamily()
comment11.text=\r\n\ Create\ a\ static\ method\ "getNewardFamily"\ that\ returns\ an\ ArrayList<Person>\ consisting\ of\ four\ Person\ objects\:\ Ted,\ age\ 41,\ salary\ 250000;\ Charlotte,\ age\ 43,\ salary\ 150000;\ Michael,\ age\ 22,\ salary\ 10000;\ and\ Matthew,\ age\ 15,\ salary\ 0.\r\n
comment12.params=
comment12.target=double\ calculateBonus()
comment13.params=
comment13.target=java.lang.String\ becomeJudge()
comment14.params=
comment14.target=int\ timeWarp()
comment15.params=o
comment15.target=boolean\ equals(java.lang.Object)
comment15.text=\r\n\ Ensure\ that\ Person.equals()\ returns\ true\ if\ two\ Person\ instances\ have\ the\ same\ name\ and\ age\ (salary\ doesn't\ factor\ into\ equality\ comparison).\ Make\ sure\ no\ exceptions\ are\ thrown\ from\ this\ method--anything\ "weird"\ should\ just\ return\ false.\r\n\ Done\r\n
comment16.params=
comment16.target=java.lang.String\ toString()
comment16.text=\r\n\ Fix\ toString()\ so\ that\ it\ returns\ a\ String\ with\ the\ Person's\ name,\ age,\ and\ salary\r\n\ Done\r\n
comment17.params=person
comment17.target=int\ compareTo(Person)
comment17.text=\r\n\ Make\ Person\ be\ Comparable,\ such\ that\ when\ I\ compare\ two\ Persons,\ they\ arrange\ themselves\ by\ salary\ in\ reverse\ order\ (salary\ 150000\ is\ less\ than\ salary\ 10000).\ (Rich\ people\ to\ the\ front\!)\r\n\ Done\r\n
comment18.params=listener
comment18.target=void\ addPropertyChangeListener(java.beans.PropertyChangeListener)
comment19.params=listener
comment19.target=void\ removePropertyChangeListener(java.beans.PropertyChangeListener)
comment2.params=
comment2.target=int\ getAge()
comment3.params=age
comment3.target=void\ setAge(int)
comment3.text=\r\n\ Ensure\ that\ Person.setAge()\ throws\ an\ IllegalArgumentException\ when\ passed\ a\ value\ less\ than\ zero\r\n\ Done\r\n
comment4.params=
comment4.target=java.lang.String\ getName()
comment5.params=name
comment5.target=void\ setName(java.lang.String)
comment5.text=\ \r\n\ Ensure\ that\ Person.setName()\ throws\ an\ IllegalArgumentException\ when\ passed\ a\ null\ String\r\n\ Done\r\n
comment6.params=
comment6.target=double\ getSalary()
comment7.params=salary
comment7.target=void\ setSalary(double)
comment8.params=
comment8.target=java.lang.String\ getSSN()
comment9.params=value
comment9.target=void\ setSSN(java.lang.String)
numComments=20
